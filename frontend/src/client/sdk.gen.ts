// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetExpiriesApiV1TickersTickerExpiriesGetData, GetExpiriesApiV1TickersTickerExpiriesGetResponses, GetExpiriesApiV1TickersTickerExpiriesGetErrors, GetExpiryApiV1TickersTickerExpiriesExpiryGetData, GetExpiryApiV1TickersTickerExpiriesExpiryGetResponses, GetExpiryApiV1TickersTickerExpiriesExpiryGetErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Expiries
 */
export const getExpiriesApiV1TickersTickerExpiriesGet = <ThrowOnError extends boolean = false>(options: Options<GetExpiriesApiV1TickersTickerExpiriesGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExpiriesApiV1TickersTickerExpiriesGetResponses, GetExpiriesApiV1TickersTickerExpiriesGetErrors, ThrowOnError>({
        url: '/api/v1/tickers/{ticker}/expiries',
        ...options
    });
};

/**
 * Get Expiry
 */
export const getExpiryApiV1TickersTickerExpiriesExpiryGet = <ThrowOnError extends boolean = false>(options: Options<GetExpiryApiV1TickersTickerExpiriesExpiryGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetExpiryApiV1TickersTickerExpiriesExpiryGetResponses, GetExpiryApiV1TickersTickerExpiriesExpiryGetErrors, ThrowOnError>({
        url: '/api/v1/tickers/{ticker}/expiries/{expiry}',
        ...options
    });
};